{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Affair","props","className","s","affair","itemName","name","itemPriority","priority","buttonAffairWrapper","buttonAffair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","onAll","button","filter","active","onHigh","onMiddle","onLow","buttonWrapper","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wHACAA,EAAOC,QAAU,CAAC,cAAgB,+BAA+B,OAAS,wBAAwB,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,aAAe,8BAA8B,oBAAsB,qCAAqC,aAAe,gC,mBCAhUD,EAAOC,QAAU,CAAC,IAAM,mB,8KCyBTC,MAhBf,SAAgBC,GAGZ,OACI,yBAAKC,UAAWC,IAAEC,QACd,yBAAKF,UAAWC,IAAEE,UAAWJ,EAAMG,OAAOE,MAC1C,yBAAKJ,UAAWC,IAAEI,cAAeN,EAAMG,OAAOI,UAE9C,yBAAKN,UAAWC,IAAEM,qBACd,4BAAQP,UAAWC,IAAEO,aAAcC,QARxB,WAAOV,EAAMW,qBAAqBX,EAAMG,OAAOS,OAQ1D,QC4BDC,MAnCf,SAAiBb,GACb,IAAMc,EAAgBd,EAAMe,KAAKC,KAAI,SAACC,GAAD,OACjC,kBAAC,EAAD,CACIC,IAAKD,EAAEL,IACPT,OAAQc,EACRN,qBAAsBX,EAAMW,0BAS9BQ,EAAQjB,IAAEkB,OAAS,KAAwB,QAAjBpB,EAAMqB,OAAmBnB,IAAEoB,OAAQ,IAC7DC,EAASrB,IAAEkB,OAAS,KAAwB,SAAjBpB,EAAMqB,OAAoBnB,IAAEoB,OAAQ,IAC/DE,EAAWtB,IAAEkB,OAAS,KAAwB,WAAjBpB,EAAMqB,OAAsBnB,IAAEoB,OAAQ,IACnEG,EAAQvB,IAAEkB,OAAS,KAAwB,QAAjBpB,EAAMqB,OAAmBnB,IAAEoB,OAAQ,IAEnE,OACI,6BAEKR,EAED,yBAAKb,UAAWC,IAAEwB,eACd,4BAAQhB,QAhBL,WAAOV,EAAM2B,UAAW,QAgBF1B,UAAWkB,GAApC,OACA,4BAAQT,QAhBJ,WAAOV,EAAM2B,UAAW,SAgBF1B,UAAWsB,GAArC,QACA,4BAAQb,QAhBF,WAAOV,EAAM2B,UAAW,WAgBF1B,UAAWuB,GAAvC,UACA,4BAAQd,QAhBL,WAAOV,EAAM2B,UAAW,QAgBF1B,UAAWwB,GAApC,UC1BVG,EAAsB,CACxB,CAAChB,IAAK,EAAGP,KAAM,QAASE,SAAU,QAClC,CAACK,IAAK,EAAGP,KAAM,QAASE,SAAU,OAClC,CAACK,IAAK,EAAGP,KAAM,QAASE,SAAU,OAClC,CAACK,IAAK,EAAGP,KAAM,OAAQE,SAAU,QACjC,CAACK,IAAK,EAAGP,KAAM,aAAcE,SAAU,WAqD5BsB,MA9Bf,WAAgB,IAAD,EACmBC,mBAAuBF,GAD1C,mBACJG,EADI,KACKC,EADL,OAEiBF,mBAAqB,OAFtC,mBAEJT,EAFI,KAEIM,EAFJ,KAILM,EAvBmB,SAACF,EAAuBV,GACjD,MAAe,QAAXA,EAAyBU,EACT,QAAXV,EACGU,EAAQV,QAAO,SAAAJ,GAAC,MAAmB,QAAfA,EAAEV,YAEd,WAAXc,EACGU,EAAQV,QAAO,SAAAJ,GAAC,MAAmB,WAAfA,EAAEV,YAEd,SAAXc,EACGU,EAAQV,QAAO,SAAAJ,GAAC,MAAmB,SAAfA,EAAEV,YAEvBwB,EAYaG,CAAcH,EAASV,GAG/C,OACI,6BACI,6BADJ,cAKI,6BACI,kBAAC,EAAD,CACIN,KAAMkB,EACNN,UAAWA,EACXhB,qBAZa,SAACC,GAAD,OAAiBoB,EAXtB,SAACD,EAAuBnB,GAChD,OACImB,EAAQV,QAAO,SAAAJ,GAAC,OAAIA,EAAEL,MAAQA,KASuBuB,CAAaJ,EAASnB,KAa/DS,OAAQA,KAIhB,6BAGA,+BC9CGe,MAdf,WACI,OACI,yBAAKnC,UAAWC,IAAEkC,KACd,iDAEA,kBAAC,EAAD,QCAQC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCZRC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDiIpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAAC,GACHC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.46205465.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonWrapper\":\"Affairs_buttonWrapper__2lPws\",\"button\":\"Affairs_button__RV4R7\",\"active\":\"Affairs_active__wvDyA\",\"affair\":\"Affairs_affair__6_y_Z\",\"itemName\":\"Affairs_itemName__11jd4\",\"itemPriority\":\"Affairs_itemPriority__37AGA\",\"buttonAffairWrapper\":\"Affairs_buttonAffairWrapper__1A54i\",\"buttonAffair\":\"Affairs_buttonAffair__1ShB9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Mok0\"};","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\r\n\r\n    return (\r\n        <div className={s.affair}>\r\n            <div className={s.itemName}>{props.affair.name}</div>\r\n            <div className={s.itemPriority}>{props.affair.priority}</div>\r\n\r\n            <div className={s.buttonAffairWrapper}>\r\n                <button className={s.buttonAffair} onClick={deleteCallback}>x</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType[]\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter ('all')} // need to fix\r\n    const setHigh = () => {props.setFilter ('high')}\r\n    const setMiddle = () => {props.setFilter ('middle')}\r\n    const setLow = () => {props.setFilter ('low')}\r\n\r\n    const onAll = s.button + ' ' + (props.filter === 'all' ? s.active: '')\r\n    const onHigh = s.button + ' ' + (props.filter === 'high' ? s.active: '')\r\n    const onMiddle = s.button + ' ' + (props.filter === 'middle' ? s.active: '')\r\n    const onLow = s.button + ' ' + (props.filter === 'low' ? s.active: '')\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <div className={s.buttonWrapper}>\r\n                <button onClick={setAll} className={onAll}>All</button>\r\n                <button onClick={setHigh} className={onHigh}>High</button>\r\n                <button onClick={setMiddle} className={onMiddle}>Middle</button>\r\n                <button onClick={setLow} className={onLow}>Low</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\nimport s from './Affairs.module.css'\r\n\r\n// types\r\nexport type AffairPriorityType = 'low' | 'middle' | 'high' // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: any = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    else if (filter === 'low') {\r\n        return (affairs.filter(a => a.priority === 'low'))\r\n    }\r\n    else if (filter === 'middle') {\r\n        return (affairs.filter(a => a.priority === 'middle'))\r\n    }\r\n    else if (filter === 'high') {\r\n        return (affairs.filter(a => a.priority === 'high'))\r\n    }\r\n        return affairs\r\n}\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\r\n    return (\r\n        affairs.filter(a => a._id !== _id)\r\n    )// need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <Affairs\r\n                    data={filteredAffairs}\r\n                    setFilter={setFilter}\r\n                    deleteAffairCallback={deleteAffairCallback}\r\n                    filter={filter}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            <HW2/>\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}