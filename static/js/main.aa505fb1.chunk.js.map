{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","avatar","src","angel","content","name","time","messageData","HW1","Affair","affair","itemName","itemPriority","priority","buttonAffairWrapper","buttonAffair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","onAll","button","filter","active","onHigh","onMiddle","onLow","buttonWrapper","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onEnter","inputClass","errorInput","input","greeting","value","onChange","onKeyDown","event","onBlur","placeholder","requiredToFill","disabled","countWrapper","count","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","trimmedName","currentTarget","trim","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","onKeyPress","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.aa505fb1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonWrapper\":\"Affairs_buttonWrapper__2lPws\",\"button\":\"Affairs_button__RV4R7\",\"active\":\"Affairs_active__wvDyA\",\"affair\":\"Affairs_affair__6_y_Z\",\"itemName\":\"Affairs_itemName__11jd4\",\"itemPriority\":\"Affairs_itemPriority__37AGA\",\"buttonAffairWrapper\":\"Affairs_buttonAffairWrapper__1A54i\",\"buttonAffair\":\"Affairs_buttonAffair__1ShB9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Greeting_input__FPzvx\",\"greeting\":\"Greeting_greeting__33hGK\",\"error\":\"Greeting_error__2_5oT\",\"errorInput\":\"Greeting_errorInput__3etr6\",\"requiredToFill\":\"Greeting_requiredToFill__1CJM0\",\"count\":\"Greeting_count__3Rp9y\",\"countWrapper\":\"Greeting_countWrapper__10QaV\",\"button\":\"Greeting_button__BLX7_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3EWTR\",\"avatar\":\"Message_avatar__RrFG6\",\"content\":\"Message_content__3jxBu\",\"angel\":\"Message_angel__3lEJc\",\"text\":\"Message_text__2x5ZQ\",\"name\":\"Message_name__3l-ID\",\"time\":\"Message_time__3otMK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__T1al-\",\"superInput\":\"SuperInputText_superInput__1-Ka-\",\"errorInput\":\"SuperInputText_errorInput__3Mlhp\",\"error\":\"SuperInputText_error__3wqga\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__20kiJ\",\"column\":\"HW4_column__1Jzj5\",\"testSpanError\":\"HW4_testSpanError__35nyT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1zT3Q\",\"button\":\"SuperButton_button__I00iH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2JZOg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Mok0\"};","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\n\r\nexport type PropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: PropsType) {\r\n    return (\r\n        <div className={s.message}>\r\n                <img className={s.avatar} src={props.avatar} />\r\n\r\n            <div className={s.angel} />\r\n\r\n            <div className={s.content}>\r\n                <div className={s.name}>{props.name}</div>\r\n                <div className={s.message}>{props.message}</div>\r\n                <div className={s.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\r\n\r\n    return (\r\n        <div className={s.affair}>\r\n            <div className={s.itemName}>{props.affair.name}</div>\r\n            <div className={s.itemPriority}>{props.affair.priority}</div>\r\n\r\n            <div className={s.buttonAffairWrapper}>\r\n                <button className={s.buttonAffair} onClick={deleteCallback}>x</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType[]\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter ('all')} // need to fix\r\n    const setHigh = () => {props.setFilter ('high')}\r\n    const setMiddle = () => {props.setFilter ('middle')}\r\n    const setLow = () => {props.setFilter ('low')}\r\n\r\n    const onAll = s.button + ' ' + (props.filter === 'all' ? s.active: '')\r\n    const onHigh = s.button + ' ' + (props.filter === 'high' ? s.active: '')\r\n    const onMiddle = s.button + ' ' + (props.filter === 'middle' ? s.active: '')\r\n    const onLow = s.button + ' ' + (props.filter === 'low' ? s.active: '')\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <div className={s.buttonWrapper}>\r\n                <button onClick={setAll} className={onAll}>All</button>\r\n                <button onClick={setHigh} className={onHigh}>High</button>\r\n                <button onClick={setMiddle} className={onMiddle}>Middle</button>\r\n                <button onClick={setLow} className={onLow}>Low</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\nimport s from './Affairs.module.css'\r\n\r\n// types\r\nexport type AffairPriorityType = 'low' | 'middle' | 'high' // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: any = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    else if (filter === 'low') {\r\n        return (affairs.filter(a => a.priority === 'low'))\r\n    }\r\n    else if (filter === 'middle') {\r\n        return (affairs.filter(a => a.priority === 'middle'))\r\n    }\r\n    else if (filter === 'high') {\r\n        return (affairs.filter(a => a.priority === 'high'))\r\n    }\r\n        return affairs\r\n}\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\r\n    return (\r\n        affairs.filter(a => a._id !== _id)\r\n    )// need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <Affairs\r\n                    data={filteredAffairs}\r\n                    setFilter={setFilter}\r\n                    deleteAffairCallback={deleteAffairCallback}\r\n                    filter={filter}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    onEnter: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, onEnter} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.errorInput : s.input // need to fix with (?:)\r\n\r\n    return (\r\n        <div className={s.greeting}>\r\n            <div>\r\n                <input\r\n                    value={name}\r\n                    onChange={setNameCallback}\r\n                    className={inputClass}\r\n                    onKeyDown={(event) => onEnter(event)}\r\n                    onBlur={setNameCallback}\r\n                    placeholder={'Enter name'}\r\n                />\r\n                <span className={s.requiredToFill}>*</span>\r\n                <span>\r\n                    <button className={s.button} onClick={addUser} disabled={!name}>Add</button>\r\n                </span>\r\n            </div>\r\n\r\n\r\n            <div className={s.error}>\r\n                {error}\r\n            </div>\r\n\r\n            <div className={s.countWrapper}>\r\n                <span className={s.count}>Count - {totalUsers}</span>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState, KeyboardEvent} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[] // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    let [name, setName] = useState<string>('') // need to fix any\r\n    let [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        const trimmedName = e.currentTarget.value.trim()\r\n        if (trimmedName) {\r\n            setName(trimmedName) // need to fix\r\n            error && setError('')\r\n        } else {\r\n            name && setName('')\r\n            setError('* Required field')\r\n        }\r\n    }\r\n    const addUser = () => {\r\n        addUserCallback(name)\r\n        alert(`Hello ${name}!`) // need to fix\r\n        setName('')\r\n    }\r\n    const onEnter = (e: KeyboardEvent) => {\r\n        if(e.key === 'Enter' && name) {\r\n            addUser()\r\n                setName('')\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length// need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onEnter={onEnter}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from 'uuid'\r\n\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string\r\n    // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    let [users, setUsers] = useState<UserType[]>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        const user = {\r\n            _id: v1(),\r\n            name: name,\r\n        }\r\n        setUsers([...users, user]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                placeholder={'Enter text'}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <div>\r\n            <label className={'wrapperBox'}>\r\n                <div>\r\n                    <input\r\n                        type={'checkbox'}\r\n                        onChange={onChangeCallback}\r\n                        className={finalInputClassName}\r\n                        {...restProps}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    {children && <span className={s.spanClassName}>{children}</span>}\r\n                </div>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}